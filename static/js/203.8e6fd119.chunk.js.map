{"version":3,"file":"static/js/203.8e6fd119.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.js","pages/Register/Register.styled.js","pages/Register/Register.js","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Input,\n  InputAdornment,\n  IconButton,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nconst StyledForm = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '& .MuiTextField-root': {\n    margin: '10px',\n    width: '300px',\n  },\n  '& .MuiFormControl-root': {\n    margin: '10px',\n    width: '300px',\n  },\n  '& .MuiButton-root': {\n    margin: '20px',\n  },\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit} autoComplete=\"off\">\n      <TextField label=\"Username\" type=\"text\" name=\"name\" variant=\"standard\" />\n      <TextField label=\"Email\" type=\"email\" name=\"email\" variant=\"standard\" />\n      <FormControl variant=\"standard\">\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          id=\"password\"\n          type={showPassword ? 'text' : 'password'}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"toggle password visibility\"\n                onClick={handleClickShowPassword}\n                onMouseDown={handleMouseDownPassword}\n              >\n                {showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <Button type=\"submit\" variant=\"contained\">\n        Register\n      </Button>\n    </StyledForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 30px auto;\n  max-width: 360px;\n  display: flex;\n  justify-content: center;\n  box-shadow: 0px 4px 3px -1px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n`;\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Container } from './Register.styled';\n\nexport default function Registr() {\n  return (\n    <Container>\n      <RegisterForm />\n    </Container>\n  );\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["StyledForm","styled","display","flexDirection","justifyContent","alignItems","margin","width","RegisterForm","dispatch","useDispatch","React","showPassword","setShowPassword","onSubmit","e","preventDefault","form","target","register","name","elements","value","email","password","reset","autoComplete","TextField","label","type","variant","FormControl","InputLabel","htmlFor","Input","id","endAdornment","InputAdornment","position","IconButton","onClick","show","onMouseDown","event","VisibilityOff","Visibility","Button","Container","Registr","createSvgIcon","_jsx","d","getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","generateUtilityClasses","_excluded","InputAdornmentRoot","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","theme","_extends","height","maxHeight","whiteSpace","color","vars","palette","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","as","clsx","_jsxs","Typography"],"sourceRoot":""}